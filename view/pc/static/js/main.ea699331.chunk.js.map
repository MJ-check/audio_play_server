{"version":3,"sources":["image/logo2.png","component/TitleBar/TitleBar.jsx","lib/config.jsx","lib/api/apiAllMusic.js","lib/apiConfig.jsx","lib/api/apiLastMusic.js","component/HomeCarousel/HomeCarousel.jsx","pages/home/HomeContent.jsx","pages/home/Home.jsx","lib/api/apiCollectList.js","lib/api/apiList.js","lib/api/apiStatus.js","lib/api/apiAdd.js","lib/api/apiRemove.js","component/CheckStatus/CheckStatus.jsx","lib/api/apiUpdateListMsg.js","lib/api/apiUploadListImage.js","component/UpdateList/UpdateList.jsx","pages/list/ListContent.jsx","lib/api/apiNewList.js","component/CreateNewList/CreateNewList.jsx","pages/list/List.jsx","lib/api/apiUploadMusic.js","lib/api/apiUploadMusicImage.js","pages/upload/UploadContent.jsx","pages/upload/Upload.jsx","lib/api/apiMusic.js","component/UpdateMusicImage/UpdateMusicImage.jsx","pages/music/MusicOnShow.jsx","pages/music/MusicHide.jsx","pages/music/Music.jsx","app.jsx","serviceWorker.js","index.js"],"names":["module","exports","Header","Layout","Content","Sider","TitleBar","config","useState","mainContent","setMainContent","useEffect","haveSider","sider","forEach","item","key","defaultSelectedSiderKey","content","className","alt","src","logo2","theme","mode","defaultSelectedKeys","defaultSelectedHeaderKey","header","map","Item","to","link","title","width","index","onClick","handleClickOnMenuItem","name","haveNew","handleHaveNew","size","titleBarHeaderConfig","HomeOutlined","style","fontSize","UnorderedListOutlined","CloudUploadOutlined","apiAllMusic","callBack","fetch","method","then","res","json","code","status","data","console","error","catch","err","apiLastMusic","HomeCarousel","setContent","autoplay","music_id","music_image_url","music_name","MusicContent","changeMusic","musicContent","setMusicContent","split","HomeContent","Home","titleBarConfig","setTitleBarConfig","Object","assign","apiCollectList","apiList","list_id","api_list","apiStatus","api_status","apiAdd","headers","body","JSON","stringify","apiRemove","CheckStatus","music_msg","closeCheckBox","listMsg","setListMsg","musicMsg","setMusicMsg","collectList","setCollectList","CloseOutlined","i","length","list_name","message","success","new_list_msg","slice","splice","list_index","push","apiUpdateListMsg","list_new_msg","apiUploadListImage","form_data","getAll","TextArea","Input","UpdateListMsg","list_msg","closeUpdateBox","msgContent","setMsgContent","loading","setLoading","updateStatus","setUpdateStatus","value","rows","maxLength","onInput","event","msg","target","type","shape","icon","DownloadOutlined","handleSubmit","UpdateListImage","imageFile","setImageFile","imageOnShow","setImageOnShow","PlusOutlined","onChange","image_file","reader","FileReader","readAsDataURL","onload","result","handleChangeImage","files","new_image_file","File","form_data_for_image","FormData","append","UpdateList","chooseIndex","setChooseIndex","backgroundColor","ListContent","musicList","setMusicList","updateMsg","setUpdateMsg","list_image_url","EditOutlined","PlayCircleOutlined","FolderAddOutlined","window","location","reload","apiNewList","NewListContainer","handleHideContainer","listName","setListName","listImage","setListImage","visible","setVisible","haveChange","setHaveChange","list_image","handleListImageChange","onOk","submit_image_file","warning","onCancel","CreateNewList","containerOnShow","setContainerOnShow","PlusSquareOutlined","List","id","apiUploadMusic","apiUploadMusicImage","UploadContent","musicFile","setMusicFile","musicName","setMusicName","signerName","setSignerName","InboxOutlined","music_file","music_file_type","music_file_name","test","handleMusicFileChange","singer_name","handleMusicImageChange","UploadOutlined","file_name","submit_music_file","form_data_for_music","Upload","apiMusic","api_music","UpdateMusicImage","musicImage","setMusicImage","handleImageChange","new_music_image","form_date_from_image","MusicOnShow","changeStatus","imageSrc","playStatus","changePlayStatus","maxTime","nowTime","changePlayTime","ShrinkOutlined","min","max","tipFormatter","FormOutlined","PauseOutlined","CaretRightOutlined","MenuUnfoldOutlined","MusicHide","ArrowsAltOutlined","Music","musicStorage","onShow","setOnShow","player","setPlayer","setPlayStatus","isFirstOpen","setIsFirstOpen","setNowTime","pause","music_path","audio","Audio","addEventListener","new_time","path","currentTime","parseInt","play","handleChangeStatus","handleChangePlayStatus","duration","time","handelChangePlayTime","App","localStorage","getItem","setMusicStorage","handleChangeMusic","setItem","exact","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea699331.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.d35b8452.png\";","import React, { useState, useEffect } from \"react\";\r\nimport \"./TitleBar.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Spin } from \"antd\";\r\nimport logo2 from \"../../image/logo2.png\";\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n/**\r\n * config = {\r\n *    header: [{\r\n *      title: \"XXX\",\r\n *      key: \"XXX\",\r\n *      link: \"XXX\",   \r\n *    }, {\r\n *      title: \"XXX\",\r\n *      key: \"XXX\",\r\n *      link: \"XXX\",\r\n *    },...],\r\n *    defaultSelectedHeaderKey: \"XXX\",\r\n *    haveSider: true / false,\r\n *    sider: [{                          // When haveSider is true\r\n *      name: \"XXX\",\r\n *      key: \"XXX\",\r\n *      content: component1,\r\n *    }, {\r\n *      name: \"XXX\",\r\n *      key: \"XXX\",\r\n *      content: component2,\r\n *    },...],\r\n *    defaultSelectedSiderKey: \"XXX\",   // When haveSider is true\r\n *    mainContent: mainComponent,       // When haveSider is false\r\n *    haveNew: true / false,\r\n *    handleHaveNew: function / component  // when haveNew is true\r\n * }\r\n */\r\n\r\nconst TitleBar = ({ config }) => {\r\n  const [mainContent, setMainContent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (config.haveSider === false) {\r\n      setMainContent(config.mainContent);\r\n    } else {\r\n      config.sider.forEach((item) => {\r\n        if (item.key === config.defaultSelectedSiderKey) {\r\n          setMainContent(item.content);\r\n        }\r\n      });\r\n    }\r\n  }, [config]);\r\n  const handleClickOnMenuItem = (index) => {\r\n    setMainContent(config.sider[index].content);\r\n  };\r\n\r\n  return (\r\n    <Layout className=\"title-bar\">\r\n      <Header className=\"header\">\r\n        <div className=\"logo\">\r\n          <img\r\n            className=\"logo-image query-image\"\r\n            alt=\"\"\r\n            src={logo2}\r\n          />\r\n        </div>\r\n        <Menu \r\n          theme=\"dark\" \r\n          mode=\"horizontal\" \r\n          defaultSelectedKeys={[config.defaultSelectedHeaderKey]}\r\n        >\r\n          {config.header.map((item) => {\r\n            return (\r\n              <Menu.Item key={item.key} className=\"top-menu-item\">\r\n                <Link to={item.link}>\r\n                  {item.title}\r\n                </Link>\r\n              </Menu.Item>\r\n            );\r\n          })}\r\n        </Menu>\r\n      </Header>\r\n      <Content className=\"content\">\r\n        <Layout className=\"content-box\">\r\n          <div>\r\n            {config.haveSider ? (\r\n              <Sider className=\"sider\" width={200}>\r\n                <Menu\r\n                  className=\"menu-box\"\r\n                  mode=\"inline\"\r\n                  defaultSelectedKeys={[config.defaultSelectedSiderKey]}\r\n                >\r\n                  {config.sider.map((item, index) => {\r\n                    return (\r\n                      <Menu.Item \r\n                        key={item.key}\r\n                        onClick={() => handleClickOnMenuItem(index)}\r\n                      >\r\n                        {item.name}\r\n                      </Menu.Item>\r\n                    );\r\n                  })}\r\n                </Menu>\r\n              </Sider>\r\n            ) : \"\"}\r\n            {config.haveNew ? (\r\n              <div className=\"have-new-container\">\r\n                {config.handleHaveNew}\r\n              </div>\r\n            ): \"\"}\r\n          </div>\r\n          <Content className=\"main-content\">\r\n            {mainContent === null ? (\r\n              <div className=\"main-content-loading\">\r\n                <Spin size=\"large\" />\r\n              </div>\r\n            ) : mainContent}\r\n          </Content>\r\n        </Layout>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default TitleBar;","import React from \"react\";\r\nimport {\r\n  HomeOutlined,\r\n  UnorderedListOutlined,\r\n  CloudUploadOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst titleBarHeaderConfig = {\r\n  header: [{\r\n    title: <div><HomeOutlined style={{ fontSize: \"20px\" }}/>主页</div>,\r\n    key: \"header1\",\r\n    link: \"/home\",   \r\n  }, {\r\n    title: <div><UnorderedListOutlined style={{ fontSize: \"20px\" }}/>收藏夹</div>,\r\n    key: \"header2\",\r\n    link: \"/list\",\r\n  }, {\r\n    title: <div><CloudUploadOutlined style={{ fontSize: \"20px\" }}/>上传音乐</div>,\r\n    key: \"header3\",\r\n    link: \"/upload\",\r\n  }],\r\n}\r\n\r\nexport { titleBarHeaderConfig };","import { api_all_music } from \"../apiConfig\";\r\n\r\nfunction apiAllMusic(callBack) {\r\n  fetch(api_all_music, {\r\n    method: \"GET\"\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => {\r\n    if (res.code === 100 && res.status === \"success\") {\r\n      callBack(res.data);\r\n    } else {\r\n      console.error(res);\r\n      callBack(null);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.error(err);\r\n    callBack(null);\r\n  });\r\n}\r\n\r\nexport default apiAllMusic;","const api_all_music = \"/api/all_music\";\r\nconst api_last_music = \"/api/last_music\";\r\nconst api_music = (music_id) => { return \"/api/music?id=\" + music_id; };\r\nconst api_upload_music = \"/api/upload_music\";\r\nconst api_upload_music_image = \"/api/upload_music_image\";\r\nconst api_collect_list = \"/api/collect_list\";\r\nconst api_list = (list_id) => { return \"/api/list?id=\" + list_id; };\r\nconst api_status = (music_id) => { return \"/api/status?id=\" + music_id; };\r\nconst api_add = \"/api/add\";\r\nconst api_remove = \"/api/remove\";\r\nconst api_new_list = \"/api/new_list\";\r\nconst api_upload_list_image = \"/api/upload_list_image\";\r\nconst api_update_list_msg = \"/api/update_list_msg\";\r\n\r\nconst music_file_url = \"/public/music\";\r\nconst music_image_url = \"/public/image\";\r\nconst list_image_url = \"/public/list\";\r\n\r\nexport {\r\n  api_all_music,\r\n  api_last_music,\r\n  api_music,\r\n  api_upload_music,\r\n  api_upload_music_image,\r\n  api_collect_list,\r\n  api_list,\r\n  api_new_list,\r\n  api_status,\r\n  api_add,\r\n  api_remove,\r\n  api_upload_list_image,\r\n  api_update_list_msg,\r\n  music_file_url,\r\n  music_image_url,\r\n  list_image_url,\r\n}","import { api_last_music } from \"../apiConfig\";\r\n\r\nfunction apiLastMusic(callBack) {\r\n  fetch(api_last_music, {\r\n    method: \"GET\"\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => {\r\n    if (res.code === 100 && res.status === \"success\") {\r\n      callBack(res.data);\r\n    } else {\r\n      console.error(res);\r\n      callBack(null);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.error(err);\r\n    callBack(null);\r\n  });\r\n}\r\n\r\nexport default apiLastMusic;","import React, { useState, useEffect } from \"react\";\r\nimport \"./HomeCarousel.css\";\r\nimport 'antd/dist/antd.css';\r\nimport { Carousel, Spin } from \"antd\";\r\nimport apiLastMusic from \"../../lib/api/apiLastMusic\";\r\nimport { music_image_url } from \"../../lib/apiConfig\";\r\n\r\nconst HomeCarousel = () => {\r\n  const [content, setContent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    apiLastMusic((data) => {\r\n      setContent(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-carousel-container\">\r\n      {content === null ? (\r\n        <div className=\"home-carousel-loading\">\r\n          <Spin size=\"large\" />\r\n        </div>\r\n      ) : (\r\n        <Carousel autoplay>\r\n          {content.map((item) => {\r\n            return (\r\n              <div \r\n                className=\"carousel-piece\" \r\n                key={\"carousel\" + item.music_id}\r\n              >\r\n                <img\r\n                  className=\"carousel-piece-image query-image\"\r\n                  src={music_image_url + \"/\" + item.music_name + \".png\"}\r\n                  alt={item.music_name}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </Carousel>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeCarousel;","import React, { useState, useEffect } from \"react\";\r\nimport \"./HomeContent.css\";\r\nimport apiAllMusic from \"../../lib/api/apiAllMusic\";\r\nimport HomeCarousel from \"../../component/HomeCarousel/HomeCarousel\";\r\nimport { music_image_url } from \"../../lib/apiConfig\";\r\n\r\nconst MusicContent = ({ changeMusic }) => {\r\n  const [musicContent, setMusicContent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    apiAllMusic((data) => {\r\n      setMusicContent(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-music-content-container\">\r\n      {musicContent === null ? \"\" : (\r\n        <div className=\"home-music-content\">\r\n          {musicContent.map((item) => {\r\n            return (\r\n              <div \r\n                className=\"home-music-content-music\" \r\n                key={\"music\" + item.music_id}\r\n                onClick={() => changeMusic(item.music_id)}\r\n              >\r\n                <div className=\"music-content-image-container\">\r\n                  <img\r\n                    className=\"music-content-image query-image\"\r\n                    src={music_image_url + \"/\" + item.music_name + \".png\"}\r\n                    alt={item.music_name}\r\n                  />\r\n                </div>\r\n                <div className=\"music-content-text-container\">\r\n                  <div className=\"music-content-text-music\">\r\n                    {item.music_name.split(\"--\")[0]}\r\n                  </div>\r\n                  <div className=\"music-content-text-singer\">\r\n                   {item.music_name.split(\"--\")[1]}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst HomeContent = ({ changeMusic }) => {\r\n  return (\r\n    <div className=\"home-content-container\">\r\n      <HomeCarousel />\r\n      <MusicContent changeMusic={changeMusic}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeContent;","import React, { useEffect, useState } from \"react\";\r\nimport \"./Home.css\";\r\nimport { Spin } from \"antd\";\r\nimport TitleBar from \"../../component/TitleBar/TitleBar\";\r\nimport { titleBarHeaderConfig } from \"../../lib/config\";\r\nimport HomeContent from \"./HomeContent\";\r\n\r\nconst Home = ({ changeMusic }) => {\r\n  const [titleBarConfig, setTitleBarConfig] = useState(null);\r\n\r\n  useEffect(() =>{\r\n    const config = Object.assign({\r\n      defaultSelectedHeaderKey: \"header1\",\r\n      haveSider: false,\r\n      mainContent: <HomeContent changeMusic={changeMusic}/>,\r\n      haveNew: false,\r\n    }, titleBarHeaderConfig);\r\n    setTitleBarConfig(config);\r\n  }, [changeMusic]);\r\n\r\n  return (\r\n    <div className=\"page-home\">\r\n      {titleBarConfig === null ? (\r\n        <div className=\"home-page-loading\">\r\n          <Spin size=\"large\" />\r\n        </div>\r\n      ) : (\r\n        <TitleBar config={titleBarConfig}/>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import { api_collect_list } from \"../apiConfig\";\r\n\r\nfunction apiCollectList(callBack) {\r\n  fetch(api_collect_list, {\r\n    method: \"GET\"\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => {\r\n    if (res.code === 100 && res.status === \"success\") {\r\n      callBack(res.data);\r\n    } else {\r\n      console.error(res);\r\n      callBack(null);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.error(err);\r\n    callBack(null);\r\n  });\r\n}\r\n\r\nexport default apiCollectList;","import { api_list } from \"../apiConfig\";\r\n\r\nfunction apiList(list_id, callBack) {\r\n  if (!list_id) {\r\n    callBack(null);\r\n    return ;\r\n  }\r\n  fetch(api_list(list_id), {\r\n    method: \"GET\",\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => {\r\n    if (res.code === 100 && res.status === \"success\") {\r\n      callBack(res.data);\r\n    } else {\r\n      console.error(res);\r\n      callBack(null);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.error(err);\r\n    callBack(null);\r\n  });\r\n}\r\n\r\nexport default apiList;","import { api_status } from \"../apiConfig\";\r\n\r\nfunction apiStatus(music_id, callBack) {\r\n  if (!music_id) {\r\n    callBack(null);\r\n    return ;\r\n  }\r\n  fetch(api_status(music_id), {\r\n    method: \"GET\"\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => {\r\n    if (res.code === 100 && res.status === \"success\") {\r\n      callBack(res.data);\r\n    } else {\r\n      console.error(res);\r\n      callBack(null);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.error(err);\r\n    callBack(null);\r\n  });\r\n}\r\n\r\nexport default apiStatus;","import { api_add } from \"../apiConfig\";\r\n\r\nfunction apiAdd(music_id, list_id, callBack) {\r\n  if (!music_id || !list_id) {\r\n    callBack(null);\r\n    return ;\r\n  }\r\n  fetch(api_add, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      music_id: music_id,\r\n      list_id: list_id,\r\n    }),\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => {\r\n    if (res.code === 100 && res.status === \"success\") {\r\n      callBack(res.code);\r\n    } else {\r\n      console.error(res);\r\n      callBack(null);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.error(err);\r\n    callBack(null);\r\n  });\r\n}\r\n\r\nexport default apiAdd;","import { api_remove } from \"../apiConfig\";\r\n\r\nfunction apiRemove(music_id, list_id, callBack) {\r\n  if (!music_id || !list_id) {\r\n    callBack(null);\r\n    return ;\r\n  }\r\n  fetch(api_remove, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      music_id: music_id,\r\n      list_id: list_id,\r\n    }),\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => {\r\n    if (res.code === 100 && res.status === \"success\") {\r\n      callBack(res.code);\r\n    } else {\r\n      console.error(res);\r\n      callBack(null);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.error(err);\r\n    callBack(null);\r\n  });\r\n}\r\n\r\nexport default apiRemove;","import React, { useState, useEffect } from \"react\";\r\nimport \"./CheckStatus.css\";\r\nimport { Spin, message } from \"antd\";\r\nimport apiStatus from \"../../lib/api/apiStatus\";\r\nimport apiAdd from \"../../lib/api/apiAdd\";\r\nimport apiRemove from \"../../lib/api/apiRemove\";\r\nimport apiCollectList from \"../../lib/api/apiCollectList\";\r\nimport {\r\n  CloseOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst CheckStatus = ({ music_msg, closeCheckBox }) => { \r\n  const [listMsg, setListMsg] = useState(null);\r\n  const [musicMsg, setMusicMsg] = useState(null);\r\n  const [collectList, setCollectList] = useState(null);\r\n\r\n  useEffect(() => {\r\n    apiCollectList((data) => {\r\n      setCollectList(data);\r\n    });\r\n    apiStatus(music_msg.music_id, (data) => {\r\n      setListMsg(data);\r\n    });\r\n    setMusicMsg(music_msg);\r\n  }, [music_msg]);\r\n  const addToList = (music_id, list_id, list_index) => {\r\n    apiAdd(music_id, list_id, (code) => {\r\n      if (code !== null) {\r\n        message.success(\"添加收藏夹成功!\");\r\n        const new_list_msg = listMsg.slice();\r\n        new_list_msg.push(collectList[list_index]);\r\n        setListMsg(new_list_msg);\r\n      } else {\r\n        message.error(\"添加收藏夹失败!\");\r\n      }\r\n    });\r\n  };\r\n  const removeFromList = (music_id, list_id) => {\r\n    apiRemove(music_id, list_id, (code) => {\r\n      if (code !== null) {\r\n        message.success(\"移出收藏夹成功!\");\r\n        const new_list_msg = listMsg.slice();\r\n        listMsg.forEach((item, index) => {\r\n          if (item.list_id === list_id) {\r\n            new_list_msg.splice(index, 1);\r\n          }\r\n        });\r\n        setListMsg(new_list_msg);\r\n      } else {\r\n        message.error(\"移出收藏夹失败!\");\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div className=\"CheckStatus-page\">\r\n      <div className=\"CheckStatus-container\">\r\n        <div \r\n          className=\"CheckStatus-close-box\"\r\n          onClick={() => closeCheckBox()}  \r\n        >\r\n          <CloseOutlined style={{ fontSize: \"28px\" }}/>\r\n        </div>\r\n      {musicMsg === null ? \"\" : (\r\n        <div className=\"CheckStatus-music-name\">\r\n          {musicMsg.music_name}\r\n        </div>\r\n      )}\r\n      {listMsg === null || musicMsg === null || collectList === null ? (\r\n        <div className=\"CheckStatus-loading\">\r\n          <Spin size=\"large\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"CheckStatus-content\">\r\n          {collectList.map((item, index) => {\r\n            for (var i = 0; i < listMsg.length; i++) {\r\n              if (item.list_id === listMsg[i].list_id) {\r\n                return (\r\n                  <div className=\"CheckStatus-item\" key={\"收藏夹\" + index}>\r\n                    <div className=\"CheckStatus-list-name\">\r\n                      {item.list_name}\r\n                    </div>\r\n                    <div \r\n                      className=\"CheckStatus-list-status in-list\"\r\n                      onClick={() => removeFromList(musicMsg.music_id, item.list_id)}\r\n                    >\r\n                      已收藏\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else {\r\n                continue;\r\n              }\r\n            }\r\n            return (\r\n              <div className=\"CheckStatus-item\" key={\"收藏夹\" + index}>\r\n                <div className=\"CheckStatus-list-name\">\r\n                  {item.list_name}\r\n                </div>\r\n                <div \r\n                  className=\"CheckStatus-list-status not-in-list\"\r\n                  onClick={() => addToList(musicMsg.music_id, item.list_id, index)}\r\n                >\r\n                  收藏\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckStatus;","import { api_update_list_msg } from \"../apiConfig\";\r\n\r\nfunction apiUpdateListMsg(list_id, list_new_msg, callBack) {\r\n  if (!list_id || !list_new_msg) {\r\n    callBack(null);\r\n    return ;\r\n  }\r\n  fetch(api_update_list_msg, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      list_id: list_id,\r\n      list_new_msg: list_new_msg\r\n    })\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => {\r\n    if (res.code === 100 && res.status === \"success\") {\r\n      callBack(res.code);\r\n    } else {\r\n      console.error(res);\r\n      callBack(null);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.error(err);\r\n    callBack(null);\r\n  })\r\n}\r\n\r\nexport default apiUpdateListMsg;","import { api_upload_list_image } from \"../apiConfig\";\r\n\r\nfunction apiUploadListImage(form_data, callBack) {\r\n  if (!form_data || form_data.getAll(\"list_image\").length !== 1) {\r\n    callBack(null);\r\n    return ;\r\n  }\r\n  fetch(api_upload_list_image, {\r\n    method: \"POST\",\r\n    body: form_data\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => {\r\n    if (res.code === 100 && res.status === \"success\") {\r\n      callBack(res.code);\r\n    } else {\r\n      console.error(res);\r\n      callBack(null);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.error(err);\r\n    callBack(null);\r\n  })\r\n}\r\n\r\nexport default apiUploadListImage;","import React, { useState } from \"react\";\r\nimport \"./UpdateList.css\";\r\nimport apiUpdateListMsg from \"../../lib/api/apiUpdateListMsg\";\r\nimport apiUploadListImage from \"../../lib/api/apiUploadListImage\";\r\nimport { Button, message, Input } from \"antd\";\r\nimport { \r\n  PlusOutlined,\r\n  DownloadOutlined,\r\n} from '@ant-design/icons';\r\nconst { TextArea } = Input;\r\n\r\nconst UpdateListMsg = ({ list_msg, closeUpdateBox }) => {\r\n  const [msgContent, setMsgContent] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [updateStatus, setUpdateStatus] = useState(false);\r\n\r\n  const handleChangeMsg = (msg) => {\r\n    setMsgContent(msg);\r\n  };\r\n  const handleSubmit = () => {\r\n    if (list_msg) {\r\n      if (!msgContent) {\r\n        message.error(\"简介内容不能为空！\");\r\n        setLoading(false);\r\n        return ;\r\n      } else {\r\n        const list_id = list_msg.list_id;\r\n        apiUpdateListMsg(list_id, msgContent, (code) => {\r\n          if (code === 100) {\r\n            setLoading(false);\r\n            setUpdateStatus(true);\r\n            message.success(\"更新收藏夹简介成功！\");\r\n          } else {\r\n            setLoading(false);\r\n            message.error(\"更新收藏夹简介失败！\");\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      message.error(\"未知错误！\");\r\n      setLoading(false);\r\n      return ;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"UpdateListMsg-page\">\r\n      <div className=\"UpdateListMsg-content\">\r\n        <TextArea \r\n          value={msgContent}\r\n          rows={10} \r\n          maxLength={200}\r\n          onInput={event => handleChangeMsg(event.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"UpdateListMsg-buttons\">\r\n        <Button\r\n          type=\"primary\"\r\n          shape=\"round\"\r\n          loading={loading}\r\n          icon={<DownloadOutlined style={{ fontSize: \"20px\" }}/>}\r\n          size=\"large\"\r\n          onClick={() => { setLoading(true); handleSubmit(); }}\r\n        >\r\n          更新简介\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          shape=\"round\"\r\n          size=\"large\"\r\n          onClick={() => closeUpdateBox(updateStatus)}\r\n        >\r\n          取消\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst UpdateListImage = ({ list_msg, closeUpdateBox }) => {\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [imageOnShow, setImageOnShow] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [updateStatus, setUpdateStatus] = useState(false);\r\n\r\n  const handleChangeImage = (image_file) => {\r\n    if (!image_file || image_file.type !== \"image/png\") {\r\n      setImageFile(null);\r\n      message.error(\"图片文件必须是PNG格式文件！\");\r\n    } else {\r\n      setImageFile(image_file);\r\n      message.success(\"图片文件已选中为 \" + image_file.name);\r\n      // File Reader\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(image_file);\r\n      reader.onload = (event) => {\r\n        setImageOnShow(event.target.result);\r\n      }\r\n    }\r\n  };\r\n  const handleSubmit = () => {\r\n    if (list_msg) {\r\n      if (!imageFile) {\r\n        message.error(\"请选择图片文件！\");\r\n        setLoading(false);\r\n        return ;\r\n      } else {\r\n        const new_image_file = new File([imageFile], list_msg.list_name + \".png\", {type: imageFile.type});\r\n        const form_data_for_image = new FormData();\r\n        form_data_for_image.append(\"list_image\", new_image_file);\r\n        apiUploadListImage(form_data_for_image, (code) => {\r\n          if (code === 100) {\r\n            setLoading(false);\r\n            setUpdateStatus(true);\r\n            message.success(\"更新收藏夹图片成功！\");\r\n          } else {\r\n            setLoading(false);\r\n            message.error(\"更新收藏夹图片失败！\");\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      message.error(\"未知错误！\");\r\n      setLoading(false);\r\n      return ;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"UpdateListImage-page\">\r\n      <div className=\"UpdateListImage-content\">\r\n        <div className=\"UpdateListImage-image-on-show\">\r\n          {imageOnShow === null ? \"\" : (\r\n            <img\r\n              className=\"UpdateListImage-image-content query-image\"\r\n              alt=\"\"\r\n              src={imageOnShow}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"UpdateListImage-content-alert\">\r\n          <div className=\"UpdateListImage-content-alert-icon\"> \r\n            <PlusOutlined style={{ fontSize: \"50px\" }} />\r\n          </div>\r\n          <div className=\"UpdateListImage-content-alert-text\">\r\n            上传图片\r\n            <div>(PNG格式)</div>\r\n          </div>\r\n        </div>\r\n        <input\r\n          type=\"file\"\r\n          onChange={event => handleChangeImage(event.target.files[0])}\r\n        />\r\n      </div>\r\n      <div className=\"UpdateListImage-button\">\r\n        <Button\r\n          type=\"primary\"\r\n          shape=\"round\"\r\n          loading={loading}\r\n          icon={<DownloadOutlined style={{ fontSize: \"20px\" }}/>}\r\n          size=\"large\"\r\n          onClick={() => { setLoading(true); handleSubmit(); }}\r\n        >\r\n          更新图片\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          shape=\"round\"\r\n          size=\"large\"\r\n          onClick={() => closeUpdateBox(updateStatus)}\r\n        >\r\n          取消\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst UpdateList = ({ list_msg, closeUpdateBox }) => {\r\n  const [chooseIndex, setChooseIndex] = useState(1);\r\n\r\n  return (\r\n    <div className=\"UpdateList-page\">\r\n      <div className=\"UpdateList-container\">\r\n        <div className=\"UpdateList-choose-title\">\r\n          <div \r\n            className=\"UpdateList-update-image\"\r\n            style={chooseIndex === 1 ? {backgroundColor: \"white\"} : {backgroundColor: \"rgba(24, 144, 255, 0.75)\"}}\r\n            onClick={() => setChooseIndex(1)}\r\n          >\r\n            更新图片\r\n          </div>\r\n          <div \r\n            className=\"UpdateList-update-msg\"\r\n            style={chooseIndex === 2 ? {backgroundColor: \"white\"} : {backgroundColor: \"rgba(24, 144, 255, 0.75)\"}}  \r\n            onClick={() => setChooseIndex(2)}\r\n          >\r\n            更新简介\r\n          </div>\r\n        </div>\r\n        <div className=\"UpdateList-box\">\r\n          {chooseIndex === 1 ? (\r\n            <UpdateListImage list_msg={list_msg} closeUpdateBox={closeUpdateBox}/>\r\n          ) : (\r\n            <UpdateListMsg list_msg={list_msg} closeUpdateBox={closeUpdateBox}/>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateList;","import React, { useState, useEffect } from \"react\";\r\nimport \"./ListContent.css\";\r\nimport { Spin } from \"antd\";\r\nimport apiList from \"../../lib/api/apiList\";\r\nimport CheckStatus from \"../../component/CheckStatus/CheckStatus\";\r\nimport UpdateList from \"../../component/UpdateList/UpdateList\";\r\nimport { list_image_url } from \"../../lib/apiConfig\";\r\nimport { \r\n  PlayCircleOutlined,\r\n  FolderAddOutlined,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst ListContent = ({ listMsg = null, changeMusic }) => {\r\n  const [musicList, setMusicList] = useState(null);\r\n  const [musicMsg, setMusicMsg] = useState(null);\r\n  const [updateMsg, setUpdateMsg] = useState(null);\r\n\r\n  useEffect(() => {\r\n    apiList(listMsg.list_id, (data) => {\r\n      setMusicList(data);\r\n    });\r\n  }, [listMsg]);\r\n  const closeCheckBox = () => {\r\n    apiList(listMsg.list_id, (data) => {\r\n      setMusicList(data);\r\n    });\r\n    setMusicMsg(null);\r\n  };\r\n  const openCheckBox = (music_msg) => {\r\n    setMusicMsg(music_msg);\r\n  };\r\n  const openUpdateBox = () => {\r\n    setUpdateMsg(listMsg);\r\n  };\r\n  const closeUpdateBox = (status) => {\r\n    setUpdateMsg(null);\r\n    if (status === true) {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"list-content-container\">\r\n      <div className=\"list-content-background-container\">\r\n        <img\r\n          className=\"list-content-background query-image\"\r\n          src={list_image_url + \"/\" + listMsg.list_name + \".png\"}\r\n          alt={listMsg.list_name}\r\n        />\r\n      </div>\r\n      <div className=\"list-content-opacity\"></div>\r\n      <div className=\"list-content-list-container\">\r\n        <div className=\"list-content-list-msg\">\r\n          <img\r\n            className=\"list-content-list-image\"\r\n            src={list_image_url + \"/\" + listMsg.list_name + \".png\"}\r\n            alt={listMsg.list_name}\r\n          />\r\n          <div className=\"list-content-list-text\">\r\n            <div className=\"list-content-list-name\">\r\n              {listMsg.list_name}\r\n              <div className=\"list-content-edit-icon\">\r\n                <EditOutlined\r\n                  className=\"list-content-edit-icon-button\" \r\n                  style={{ fontSize: \"20px\" }}\r\n                  onClick={() => openUpdateBox()}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"list-content-list-msg-text\">\r\n              {listMsg.list_msg}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"list-content-music-container\">\r\n          {musicList === null ? (\r\n            <div className=\"list-content-music-loading\">\r\n              <Spin size=\"large\" />\r\n            </div>\r\n          ) : (\r\n            <div className=\"list-content-music-content\">\r\n              {musicList.map((item) => {\r\n                return (\r\n                  <div className=\"list-content-music\" key={\"list_music\" + item.music_id}>\r\n                    <div className=\"list-content-music-msg\">\r\n                      <div className=\"list-content-music-name\">\r\n                        {item.music_name.split(\"--\")[0]}\r\n                      </div>\r\n                      <div className=\"list-content-music-signer\">\r\n                        {item.music_name.split(\"--\")[1]}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"list-content-music-button\">\r\n                      <div className=\"list-content-button-container\">\r\n                        <div \r\n                          className=\"list-content-button\"\r\n                          onClick={() => changeMusic(item.music_id)}\r\n                        >\r\n                          <PlayCircleOutlined style={{ fontSize: \"25px\" }}/>\r\n                        </div>\r\n                        <div \r\n                          className=\"list-content-button\"\r\n                          onClick={() => openCheckBox(item)}\r\n                        >\r\n                          <FolderAddOutlined style={{ fontSize: \"28px\" }}/>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {musicMsg === null ? \"\" : (\r\n        <div className=\"list-content-check-status\">\r\n          <CheckStatus \r\n            music_msg={musicMsg} \r\n            closeCheckBox={closeCheckBox}\r\n          />\r\n        </div>\r\n      )}\r\n      {updateMsg === null ? \"\" : (\r\n        <div className=\"list-content-update-msg\">\r\n          <UpdateList \r\n            list_msg={updateMsg}\r\n            closeUpdateBox={closeUpdateBox}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListContent;","import { api_new_list } from \"../apiConfig\";\r\n\r\nfunction apiNewList(list_name, list_msg, callBack) {\r\n  if (!list_name || !list_msg) {\r\n    callBack(null);\r\n    return ;\r\n  }\r\n  fetch(api_new_list, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      list_name: list_name,\r\n      list_msg: list_msg\r\n    })\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => {\r\n    if (res.code === 100 && res.status === \"success\") {\r\n      callBack(res.code);\r\n    } else {\r\n      console.error(res);\r\n      callBack(null);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.error(err);\r\n    callBack(null);\r\n  })\r\n}\r\n\r\nexport default apiNewList;","import React, { useState, useEffect } from \"react\";\r\nimport \"./CreateNewList.css\";\r\nimport { Input, Button, message, Modal } from \"antd\";\r\nimport { \r\n  PlusSquareOutlined,\r\n  PlusOutlined,\r\n  DownloadOutlined,\r\n} from '@ant-design/icons';\r\nimport apiNewList from \"../../lib/api/apiNewList\";\r\nimport apiUploadListImage from \"../../lib/api/apiUploadListImage\";\r\nconst { TextArea } = Input;\r\n\r\nconst NewListContainer = ({ handleHideContainer }) => {\r\n  const [listName, setListName] = useState(null);\r\n  const [listMsg, setListMsg] = useState(null);\r\n  const [listImage, setListImage] = useState(null);\r\n  const [imageOnShow, setImageOnShow] = useState(null);\r\n  const [visible, setVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [haveChange, setHaveChange] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setListName(null);\r\n    setListMsg(null);\r\n    setListImage(null);\r\n    setImageOnShow(null);\r\n    setVisible(false);\r\n    setLoading(false);\r\n    setHaveChange(false);\r\n  }, []);\r\n  const handleListImageChange = (list_image) => {\r\n    if (!list_image || list_image.type !== \"image/png\") {\r\n      setListImage(null);\r\n      message.error(\"图片文件必须是PNG格式文件！\");\r\n    } else {\r\n      setListImage(list_image);\r\n      message.success(\"图片文件已选中为 \" + list_image.name);\r\n      // File Reader \r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(list_image);\r\n      reader.onload = (event) => {\r\n        setImageOnShow(event.target.result);\r\n      }\r\n    }\r\n  };\r\n  const handleListNameChange = (list_name) => {\r\n    setListName(list_name);\r\n  };\r\n  const handleListMsgChange = (list_msg) => {\r\n    setListMsg(list_msg);\r\n  };\r\n  const handleSubmitCheck = () => {\r\n    if (!listName) {\r\n      message.error(\"请填写收藏夹名称！\");\r\n      return ;\r\n    } else if (!listImage) {\r\n      message.error(\"请选择图片文件！\");\r\n      return ;\r\n    } else if (!listMsg) {\r\n      setListMsg(\"该收藏夹未填写简介...\");\r\n    }\r\n    setVisible(true);\r\n    setLoading(true);\r\n  };\r\n  const handleSubmit = () => {\r\n    const submit_image_file = new File([listImage], listName + \".png\", {type: listImage.type});\r\n    const form_data_for_image = new FormData();\r\n    form_data_for_image.append(\"list_image\", submit_image_file);\r\n    apiNewList(listName, listMsg, (code) => {\r\n      if (code === 100) {\r\n        apiUploadListImage(form_data_for_image, (code) => {\r\n          if (code === 100) {\r\n            setLoading(false);\r\n            message.success(\"创建收藏夹成功！\");\r\n          } else {\r\n            setLoading(false);\r\n            message.warning(\"图片上传失败！\");\r\n          }\r\n        })\r\n      } else {\r\n        setLoading(false);\r\n        message.error(\"创建收藏夹失败！\");\r\n      }\r\n    });\r\n    setListName(null);\r\n    setListMsg(null);\r\n    setListImage(null);\r\n    setImageOnShow(null);\r\n    setHaveChange(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"NewListContainer-page\">\r\n      <div className=\"NewListContainer-page-container\">\r\n        <div className=\"NewListContainer-page-title\">新建收藏夹</div>\r\n        <div className=\"NewListContainer-content\">\r\n          <div className=\"NewListContainer-text-content\">\r\n            <div className=\"NewListContainer-input-list-name\">\r\n              <div>收藏夹名</div>\r\n              <Input \r\n                value={listName}\r\n                maxLength={20}\r\n                onChange={event => handleListNameChange(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"NewListContainer-input-list-msg\">\r\n              <div>收藏夹简介</div>\r\n              <TextArea \r\n                value={listMsg}\r\n                rows={4}\r\n                maxLength={200}\r\n                onChange={event => handleListMsgChange(event.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"NewListContainer-image-content\">\r\n            <div className=\"NewListContainer-image-upload-review\">\r\n              {listImage === null ? \"\" : (\r\n                <img \r\n                  className=\"NewListContainer-image-upload-review-pic query-image\"\r\n                  alt=\"\"\r\n                  src={imageOnShow}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"NewListContainer-image-content-text\">\r\n              <div className=\"NewListContainer-image-content-text-icon\">\r\n                <PlusOutlined style={{ fontSize: \"50px\" }}/>\r\n              </div>\r\n              <div className=\"NewListContainer-image-content-alert\">\r\n                上传图片\r\n                <div>(PNG格式)</div>\r\n              </div>\r\n            </div>\r\n            <input \r\n              type=\"file\"\r\n              onChange={event => handleListImageChange(event.target.files[0])}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"NewListContainer-button\">\r\n          <Button \r\n            type=\"primary\"\r\n            shape=\"round\" \r\n            loading={loading}\r\n            icon={<DownloadOutlined style={{ fontSize: \"20px\" }}/>} \r\n            size=\"large\"\r\n            onClick={() => handleSubmitCheck()}\r\n          >\r\n            创建收藏夹\r\n          </Button>\r\n          <Button \r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            onClick={() => handleHideContainer(haveChange)}\r\n          >\r\n            取消\r\n          </Button>\r\n          <Modal\r\n            title=\"确认创建收藏夹\"\r\n            visible={visible}\r\n            onOk={() => { setVisible(false); handleSubmit(); }}\r\n            onCancel={() => { setVisible(false); setLoading(false); }}\r\n          >\r\n            <p>确认创建收藏夹 \"{listName}\" ?</p>\r\n            <p>\"{listName}\" 的简介为: {listMsg}</p>\r\n            <p>同时上传文件: {listName + \".png\"}</p>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CreateNewList = () => {\r\n  const [containerOnShow, setContainerOnShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setContainerOnShow(false);\r\n  }, []);\r\n  const handleShowContainer = () => {\r\n    setContainerOnShow(true);\r\n  };\r\n  const handleHideContainer = (status) => {\r\n    setContainerOnShow(false);\r\n    if (status === true) {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"CreateNewList-page-container\">\r\n      <div\r\n        className=\"CreateNewList-page\"\r\n        onClick={() => handleShowContainer()}\r\n      >\r\n        <PlusSquareOutlined style={{ fontSize: \"25px\" }}/>\r\n        新建收藏夹\r\n      </div>\r\n      {containerOnShow === false ? \"\" : (\r\n        <div className=\"CreateNewList-container\">\r\n          <NewListContainer handleHideContainer={handleHideContainer} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateNewList;","import React, { useEffect, useState } from \"react\";\r\nimport \"./List.css\";\r\nimport { Spin } from \"antd\";\r\nimport TitleBar from \"../../component/TitleBar/TitleBar\";\r\nimport { titleBarHeaderConfig } from \"../../lib/config\";\r\nimport apiCollectList from \"../../lib/api/apiCollectList\";\r\nimport { list_image_url } from \"../../lib/apiConfig\";\r\nimport ListContent from \"./ListContent\";\r\nimport CreateNewList from \"../../component/CreateNewList/CreateNewList\";\r\n\r\nconst List = ({ changeMusic }) => {\r\n  const [titleBarConfig, setTitleBarConfig] = useState(null);\r\n\r\n  useEffect(() => {\r\n    apiCollectList((data) => {\r\n      var sider = [];\r\n      if (data !== null) {\r\n        data.forEach((item, index) => {\r\n          sider.push({\r\n            name: <div>\r\n                    <img \r\n                      className=\"sider-image query-image\"\r\n                      src={list_image_url + \"/\" + item.list_name + \".png\"}\r\n                      alt=\"\"\r\n                    />\r\n                    {item.list_name}\r\n                  </div>,\r\n            id: item.list_id,\r\n            key: \"sider\" + index,\r\n            content: <ListContent listMsg={item} changeMusic={changeMusic}/>,\r\n          });\r\n        });\r\n      }\r\n      const config = Object.assign({\r\n        defaultSelectedHeaderKey: \"header2\",\r\n        haveSider: true,\r\n        sider: sider,\r\n        defaultSelectedSiderKey: \"sider0\",\r\n        haveNew: true,\r\n        handleHaveNew: <CreateNewList />,\r\n      }, titleBarHeaderConfig);\r\n      setTitleBarConfig(config);\r\n    });\r\n  }, [changeMusic]);\r\n\r\n  return (\r\n    <div className=\"page-list\">\r\n      {titleBarConfig === null ? (\r\n        <div className=\"list-page-loading\">\r\n          <Spin size=\"large\" />\r\n        </div>\r\n      ) : (\r\n        <TitleBar config={titleBarConfig} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;","import { api_upload_music } from \"../apiConfig\";\r\n\r\nfunction apiUploadMusic(form_data, callBack) {\r\n  if (!form_data || form_data.getAll(\"music_file\").length !== 1) {\r\n    callBack(null);\r\n    return ;\r\n  }\r\n  fetch(api_upload_music, {\r\n    method: \"POST\",\r\n    body: form_data\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => {\r\n    if (res.code === 100 && res.status === \"success\") {\r\n      callBack(res.code);\r\n    } else {\r\n      console.error(res);\r\n      callBack(null);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.error(err);\r\n    callBack(null);\r\n  })\r\n}\r\n\r\nexport default apiUploadMusic;","import { api_upload_music_image } from \"../apiConfig\";\r\n\r\nfunction apiUploadMusicImage(form_data, callBack) {\r\n  if (!form_data || form_data.getAll(\"music_image\").length !== 1) {\r\n    callBack(null);\r\n    return ;\r\n  }\r\n  fetch(api_upload_music_image, {\r\n    method: \"POST\",\r\n    body: form_data\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => {\r\n    if (res.code === 100 && res.status === \"success\") {\r\n      callBack(res.code);\r\n    } else {\r\n      console.error(res);\r\n      callBack(null);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.error(err);\r\n    callBack(null);\r\n  })\r\n}\r\n\r\nexport default apiUploadMusicImage;","import React, { useState, useEffect } from \"react\";\r\nimport \"./UploadContent.css\";\r\nimport { Input, message, Button, Modal } from \"antd\";\r\nimport { \r\n  InboxOutlined, \r\n  PlusOutlined, \r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\nimport apiUploadMusic from \"../../lib/api/apiUploadMusic\";\r\nimport apiUploadMusicImage from \"../../lib/api/apiUploadMusicImage\";\r\n\r\nconst UploadContent = () => {\r\n  const [musicFile, setMusicFile] = useState(null);\r\n  const [musicName, setMusicName] = useState(null);\r\n  const [signerName, setSignerName] = useState(null);\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [imageOnShow, setImageOnShow] = useState(null);\r\n  const [visible, setVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMusicFile(null);\r\n    setMusicName(null);\r\n    setSignerName(null);\r\n    setImageFile(null);\r\n    setImageOnShow(null);\r\n    setVisible(false);\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const handleMusicFileChange = (music_file) => {\r\n    if (!music_file) {\r\n      setMusicFile(null);\r\n      message.error(\"请选择MP3音频文件！\");\r\n    } else {\r\n      const music_file_type = music_file.type;\r\n      const music_file_name = music_file.name;\r\n\r\n      /* 满足条件 1：是音频文件；2：尾缀是mp3 */\r\n      const type_check = /audio/.test(music_file_type) && music_file_name.split(\".\").slice(-1)[0] === \"mp3\";\r\n      if (!type_check) {\r\n        setMusicFile(null);\r\n        message.error(\"音频文件必须是MP3格式文件！\");\r\n      } else {\r\n        setMusicFile(music_file);\r\n        message.success(\"音频文件已选中为 \" + music_file.name);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMusicImageChange = (image_file) => {\r\n    if (!image_file || image_file.type !== \"image/png\") {\r\n      setImageFile(null);\r\n      message.error(\"图片文件必须是PNG格式文件！\");\r\n    } else {\r\n      setImageFile(image_file);\r\n      message.success(\"图片文件已选中为 \" + image_file.name);\r\n      // File Reader\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(image_file);\r\n      reader.onload = (event) => {\r\n        setImageOnShow(event.target.result);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMusicNameChange = (music_name) => {\r\n    setMusicName(music_name);\r\n  };\r\n\r\n  const handleSingerNameChange = (singer_name) => {\r\n    setSignerName(singer_name);\r\n  };\r\n\r\n  const handleSubmitCheck = () => {\r\n    if (!musicFile) {\r\n      message.error(\"请选择音频文件！\");\r\n      return ;\r\n    } else if (!imageFile) {\r\n      message.error(\"请选择图片文件！\");\r\n      return ;\r\n    } else if (!musicName) {\r\n      message.error(\"请输入音乐名！\");\r\n      return ;\r\n    } else if (!signerName) {\r\n      message.error(\"请输入歌手名！\");\r\n      return ;\r\n    } else {\r\n      setVisible(true);\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const file_name = musicName + \"--\" + signerName;\r\n    const submit_music_file = new File([musicFile], file_name + \".mp3\", {type: musicFile.type});\r\n    const submit_image_file = new File([imageFile], file_name + \".png\", {type: imageFile.type});\r\n\r\n    const form_data_for_music = new FormData();\r\n    form_data_for_music.append(\"music_file\", submit_music_file);\r\n    const form_data_for_image = new FormData();\r\n    form_data_for_image.append(\"music_image\", submit_image_file);\r\n    apiUploadMusic(form_data_for_music, (code) => {\r\n      if (code === 100) {\r\n        apiUploadMusicImage(form_data_for_image, (code) => {\r\n          if (code === 100) {\r\n            setLoading(false);\r\n            message.success(\"音乐上传成功！\");\r\n          } else {\r\n            setLoading(false);\r\n            message.warning(\"图片上传失败！\");\r\n          }\r\n        });\r\n      } else {\r\n        setLoading(false);\r\n        message.error(\"音乐上传失败！\");\r\n      }\r\n    });\r\n    \r\n    setMusicFile(null);\r\n    setMusicName(null);\r\n    setSignerName(null);\r\n    setImageFile(null);\r\n    setImageOnShow(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"UploadContent-page\">\r\n      <div className=\"UploadContent-music-file\">\r\n        <div className=\"UploadContent-music-file-alert\">\r\n          <div className=\"UploadContent-music-file-alert-icon\">\r\n            <InboxOutlined style={{ fontSize: \"75px\" }}/>\r\n          </div>\r\n          <div className=\"UploadContent-music-file-alert-text\">\r\n            <div className=\"first-text\">上传音频文件</div>\r\n            <div className=\"second-text\">点击或者拖拽上传，仅支持单文件上传，文件规定为MP3格式文件</div>\r\n          </div>\r\n        </div>\r\n        <input \r\n          type=\"file\"\r\n          onChange={event => handleMusicFileChange(event.target.files[0])}\r\n        />\r\n      </div>\r\n      <div className=\"UploadContent-music-info\">\r\n        <div className=\"UploadContent-music-name\">\r\n          <div className=\"UploadContent-music-name-alert\">\r\n            请输入音乐名\r\n          </div>\r\n          <Input \r\n            value={musicName}\r\n            maxLength={20}\r\n            onChange={event => handleMusicNameChange(event.target.value)}\r\n          />\r\n          <div className=\"UploadContent-music-name-alert\">\r\n            请输入歌手名\r\n          </div>\r\n          <Input \r\n            value={signerName}\r\n            maxLength={10}\r\n            onChange={event => handleSingerNameChange(event.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"UploadContent-music-image\">\r\n          <div className=\"Upload-music-image-on-show\">\r\n          {imageOnShow === null ? \"\" : (\r\n            <img\r\n              className=\"Upload-music-image-on-show-pic query-image\"\r\n              src={imageOnShow}\r\n              alt=\"\"\r\n            />\r\n          )}\r\n          </div>\r\n          <div className=\"UploadContent-music-image-alert\">\r\n            <div className=\"UploadContent-music-image-alert-icon\">\r\n              <PlusOutlined style={{ fontSize: \"50px\" }}/>\r\n            </div>\r\n            <div className=\"UploadContent-music-image-alert-text\">\r\n              上传图片\r\n              <div>(PNG格式)</div>\r\n            </div>\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            onChange={event => handleMusicImageChange(event.target.files[0])}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"UploadContent-submit-button\">\r\n        <Button \r\n          type=\"primary\" \r\n          shape=\"round\" \r\n          loading={loading}\r\n          icon={<UploadOutlined style={{ fontSize: \"20px\" }}/>} \r\n          size=\"large\"\r\n          onClick={() => handleSubmitCheck()}\r\n        >\r\n          上传音乐\r\n        </Button>\r\n        <Modal\r\n          title=\"确认上传\"\r\n          visible={visible}\r\n          onOk={() => { setVisible(false); handleSubmit(); }}\r\n          onCancel={() => { setVisible(false); setLoading(false); }}\r\n        >\r\n          <p>确认上传音乐 \"{musicName + \"--\" + signerName}\" ?</p>\r\n          <p>同时上传以下文件:</p>\r\n          <p>{musicName + \"--\" + signerName + \".mp3\"}</p>\r\n          <p>{musicName + \"--\" + signerName + \".png\"}</p>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadContent;","import React, { useState, useEffect } from \"react\";\r\nimport \"./Upload.css\";\r\nimport { Spin } from \"antd\";\r\nimport TitleBar from \"../../component/TitleBar/TitleBar\";\r\nimport { titleBarHeaderConfig } from \"../../lib/config\";\r\nimport UploadContent from \"./UploadContent\";\r\n\r\nconst Upload = () => {\r\n  const [titleBarConfig, setTitleBarConfig] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const config = Object.assign({\r\n      defaultSelectedHeaderKey: \"header3\",\r\n      haveSider: false,\r\n      mainContent: <UploadContent />,\r\n      haveNew: false,\r\n    }, titleBarHeaderConfig);\r\n    setTitleBarConfig(config);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page-upload\">\r\n      {titleBarConfig === null ? (\r\n        <div className=\"upload-page-loading\">\r\n          <Spin size=\"large\" />\r\n        </div>\r\n      ) : (\r\n        <TitleBar config={titleBarConfig} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;","import { api_music } from \"../apiConfig\";\r\n\r\nfunction apiMusic(music_id, callBack) {\r\n  if (!music_id) {\r\n    callBack(null);\r\n    return ;\r\n  }\r\n  fetch(api_music(music_id), {\r\n    method: \"GET\",\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => {\r\n    if (res.code === 100 && res.status === \"success\") {\r\n      callBack(res.data);\r\n    } else {\r\n      console.error(res);\r\n      callBack(null);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.error(err);\r\n    callBack(null);\r\n  });\r\n}\r\n\r\nexport default apiMusic;","import React, { useState, useEffect } from \"react\";\r\nimport \"./UpdateMusicImage.css\";\r\nimport { Button, message } from \"antd\";\r\nimport { \r\n  PlusOutlined,\r\n  DownloadOutlined,\r\n} from '@ant-design/icons';\r\nimport apiUploadMusicImage from \"../../lib/api/apiUploadMusicImage\";\r\n\r\nconst UpdateMusicImage = ({ music_msg, closeUpdateBox }) => {\r\n  const [musicImage, setMusicImage] = useState(null);\r\n  const [imageOnShow, setImageOnShow] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMusicImage(null);\r\n    setImageOnShow(null);\r\n    setLoading(false);\r\n  }, []);\r\n  const handleImageChange = (image_file) => {\r\n    if (!image_file || image_file.type !== \"image/png\") {\r\n      setMusicImage(null);\r\n      message.error(\"图片文件必须是PNG格式文件！\");\r\n    } else {\r\n      setMusicImage(image_file);\r\n      message.success(\"图片文件已选中为 \" + image_file.name);\r\n      // FIle Reader\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(image_file);\r\n      reader.onload = (event) => {\r\n        setImageOnShow(event.target.result);\r\n      }\r\n    }\r\n  };\r\n  const handleSubmit = () => {\r\n    if (music_msg) {\r\n      if (!musicImage) {\r\n        message.error(\"请选择图片文件！\");\r\n        setLoading(false);\r\n        return ;\r\n      } else {\r\n        const new_music_image = new File([musicImage], music_msg.music_name + \".png\", {type: musicImage.type});\r\n        const form_date_from_image = new FormData();\r\n        form_date_from_image.append(\"music_image\", new_music_image);\r\n        apiUploadMusicImage(form_date_from_image, (code) => {\r\n          if (code === 100) {\r\n            setLoading(false);\r\n            message.success(\"上传音乐图片成功，刷新页面后更新！\");\r\n          } else {\r\n            setLoading(false);\r\n            message.error(\"更新音乐图片失败！\");\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      message.error(\"未知错误！\");\r\n      setLoading(false);\r\n      return ;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"UpdateMusicImage-page\">\r\n      <div className=\"UpdateMusicImage-container\">\r\n        <div className=\"UpdateMusicImage-title\">\r\n          更新音乐图片\r\n        </div>\r\n        <div className=\"UpdateMusicImage-content\">\r\n          <div className=\"UpdateMusicImage-image-on-show\">\r\n            {imageOnShow === null ? \"\" : (\r\n              <img \r\n                className=\"UpdateMusicImage-image query-image\"\r\n                alt=\"\"\r\n                src={imageOnShow}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"UpdateMusicImage-alert\">\r\n            <div className=\"UpdateMusicImage-icon\">\r\n              <PlusOutlined style={{ fontSize: \"50px\" }}/>\r\n            </div>\r\n            <div className=\"UpdateMusicImage-alert-text\">\r\n              上传图片\r\n              <div>(PNG格式)</div>\r\n            </div>\r\n          </div>\r\n          <input \r\n            type=\"file\" \r\n            onChange={event => handleImageChange(event.target.files[0])}\r\n          />\r\n        </div>\r\n        <div className=\"UpdateMusicImage-button\">\r\n          <Button \r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            loading={loading}\r\n            icon={<DownloadOutlined style={{ fontSize: \"20px\" }}/>}\r\n            size=\"large\"\r\n            onClick={() => { setLoading(true); handleSubmit(); }}\r\n          >\r\n            更新图片\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            onClick={() => closeUpdateBox()}\r\n          >\r\n            取消\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateMusicImage;","import React, { useState } from \"react\";\r\nimport \"./MusicOnShow.css\";\r\nimport { Spin, Slider } from \"antd\";\r\nimport CheckStatus from \"../../component/CheckStatus/CheckStatus\";\r\nimport UpdateMusicImage from \"../../component/UpdateMusicImage/UpdateMusicImage\";\r\nimport {\r\n  ShrinkOutlined,\r\n  PauseOutlined,\r\n  CaretRightOutlined,\r\n  MenuUnfoldOutlined,\r\n  FormOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst MusicOnShow = ({ \r\n  changeStatus = null, \r\n  imageSrc = null, \r\n  playStatus = null, \r\n  changePlayStatus = null, \r\n  maxTime = null,\r\n  nowTime = null,\r\n  changePlayTime = null,\r\n  music_msg=null\r\n}) => {\r\n  const [musicMsg, setMusicMsg] = useState(null);\r\n  const [updateMsg, setUpdateMsg] = useState(null);\r\n\r\n  const closeCheckBox = () => {\r\n    setMusicMsg(null);\r\n  };\r\n  const openCheckBox = () => {\r\n    setMusicMsg(music_msg);\r\n  };\r\n  const openUpdateBox = () => {\r\n    setUpdateMsg(music_msg);\r\n  };\r\n  const closeUpdateBox = () => {\r\n    setUpdateMsg(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"musicOnShow-page\">\r\n      <div \r\n        className=\"musicOnShow-change-status\"\r\n        onClick={changeStatus}\r\n      >\r\n        <ShrinkOutlined style={{ fontSize: \"40px\" }}/>\r\n      </div>\r\n      {imageSrc !== null && playStatus !== null && maxTime !== null && nowTime !== null ? (\r\n        <div>\r\n          {musicMsg === null ? \"\" : (\r\n            <div className=\"musicOnShow-check-status-box\">\r\n              <CheckStatus music_msg={musicMsg} closeCheckBox={() => closeCheckBox()}/>\r\n            </div>\r\n          )}\r\n          {updateMsg === null ? \"\" : (\r\n            <div className=\"musicOnSHow-update-music-image\">\r\n              <UpdateMusicImage music_msg={updateMsg} closeUpdateBox={() => closeUpdateBox()}/>\r\n            </div>\r\n          )}\r\n          <div className=\"musicOnShow-background\">\r\n            <img \r\n              className=\"musicOnShow-background-image query-image\"\r\n              src={imageSrc}\r\n              alt=\"\"\r\n            />\r\n            <div className=\"musicOnShow-background-opacity\"></div>\r\n          </div>\r\n          <div className=\"musicOnShow-container\">\r\n            <div className=\"musicOnShow-image-container\">\r\n              <img\r\n                className=\"musicOnShow-image query-image\"\r\n                src={imageSrc}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"musicOnShow-player-container\">\r\n            <Slider\r\n              className=\"musicOnSHow-player-slider\"\r\n              min={0}\r\n              max={maxTime}\r\n              value={nowTime}\r\n              onChange={(value) => changePlayTime(value)}\r\n              tipFormatter={null}\r\n            />\r\n            <div className=\"musicOnShow-play-status\">\r\n              <div\r\n                className=\"musicOnShow-play-status-setting-button\"\r\n                onClick={() => openUpdateBox()}\r\n              >\r\n                <FormOutlined style={{ fontSize: \"40px\" }}/>\r\n              </div>\r\n              <div \r\n                className=\"musicOnShow-play-status-play-button\"\r\n                onClick={changePlayStatus}\r\n              >\r\n                {playStatus === true ? (\r\n                  <PauseOutlined style={{ fontSize: \"50px\" }}/>\r\n                ) : (\r\n                  <CaretRightOutlined style={{ fontSize: \"50px\" }}/>\r\n                )}\r\n              </div>\r\n              <div \r\n                className=\"musicOnShow-play-status-check-status-button\"\r\n                onClick={() => openCheckBox()}\r\n              >\r\n                <MenuUnfoldOutlined style={{ fontSize: \"40px\" }}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"musicOnShow-loading\">\r\n          <Spin size=\"large\"/>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MusicOnShow;","import React from \"react\";\r\nimport \"./MusicHide.css\";\r\nimport { Spin } from \"antd\";\r\nimport {\r\n  ArrowsAltOutlined,\r\n  PauseOutlined,\r\n  CaretRightOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst MusicHide = ({ \r\n  changeStatus = null,\r\n  imageSrc = null,\r\n  playStatus = null,\r\n  changePlayStatus = null\r\n}) => {\r\n  return (\r\n    <div className=\"musicHide-page\">\r\n      <div \r\n        className=\"musicHide-change-status\"\r\n        onClick={changeStatus}\r\n      >\r\n        <ArrowsAltOutlined style={{ fontSize: \"30px\" }}/>\r\n      </div>\r\n      {imageSrc !== null && playStatus !== null ? (\r\n        <div className=\"musicHide-container\">\r\n          <div className=\"musicHide-image-container\">\r\n            <img \r\n              className=\"musicHide-image query-image\"\r\n              src={imageSrc}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div \r\n            className=\"musicHide-play-status\"\r\n            onClick={changePlayStatus}\r\n          >\r\n          {playStatus === true ? (\r\n            <PauseOutlined style={{ fontSize: \"30px\" }}/>\r\n          ) : (\r\n            <CaretRightOutlined style={{ fontSize: \"30px\" }}/>\r\n          )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"musicHide-loading\">\r\n          <Spin />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MusicHide;","import React, { useState, useEffect } from \"react\";\r\nimport apiMusic from \"../../lib/api/apiMusic\";\r\nimport MusicOnShow from \"./MusicOnShow\";\r\nimport MusicHide from \"./MusicHide\";\r\n\r\nconst Music = ({ musicStorage }) => {\r\n  const [onShow, setOnShow] = useState(false);\r\n  const [musicMsg, setMusicMsg] = useState(null);\r\n  const [player, setPlayer] = useState(null);\r\n  const [playStatus, setPlayStatus] = useState(null);\r\n  const [isFirstOpen, setIsFirstOpen] = useState(null);\r\n  const [nowTime, setNowTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setOnShow(false);\r\n    setIsFirstOpen(true);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (player !== null) { player.pause(); }\r\n    apiMusic(musicStorage, (data) => {\r\n      setMusicMsg(data);\r\n      if (data !== null) {\r\n        const music_path = \"/public/music/\" + data.music_name + \".mp3\";\r\n        const audio = new Audio(music_path);\r\n        audio.addEventListener(\"ended\", () => {\r\n          setPlayStatus(false);\r\n        });\r\n        audio.addEventListener(\"timeupdate\", (event) => {\r\n          const new_time = event.path ? event.path[0].currentTime : event.target.currentTime;\r\n          setNowTime(parseInt(new_time));\r\n        });\r\n        if (isFirstOpen === true || isFirstOpen === null) {\r\n          audio.pause();\r\n          setPlayStatus(false);\r\n          setIsFirstOpen(false);\r\n        } else {\r\n          audio.play();\r\n          setPlayStatus(true);\r\n        }\r\n        setPlayer(audio);\r\n      } else {\r\n        setPlayer(null);\r\n        setPlayStatus(null);\r\n      }\r\n    });\r\n  // eslint-disable-next-line\r\n  }, [musicStorage]);\r\n  const handleChangeStatus = () => {\r\n    setOnShow(!onShow);\r\n  }\r\n  const handleChangePlayStatus = () => {\r\n    if (playStatus === true && player !== null) {\r\n      player.pause();\r\n      setPlayStatus(!playStatus);\r\n    } else if (playStatus === false && player !== null) {\r\n      player.play();\r\n      setPlayStatus(!playStatus);\r\n    }\r\n  }\r\n  const handelChangePlayTime = (time) => {\r\n    if (player !== null) {\r\n      player.currentTime = time;\r\n      player.play();\r\n      setPlayStatus(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"music-page\">\r\n      {onShow === true ? (\r\n        <MusicOnShow \r\n          changeStatus={handleChangeStatus}\r\n          imageSrc={musicMsg ? \"/public/image/\" + musicMsg.music_name + \".png\" : null}\r\n          playStatus={playStatus}\r\n          changePlayStatus={handleChangePlayStatus}\r\n          maxTime={player === null ? null : parseInt(player.duration)}\r\n          nowTime={nowTime === null ? null : nowTime}\r\n          changePlayTime={(time) => handelChangePlayTime(time)}\r\n          music_msg={musicMsg}\r\n        />\r\n      ) : (\r\n        <MusicHide \r\n          changeStatus={handleChangeStatus}\r\n          imageSrc={musicMsg ? \"/public/image/\" + musicMsg.music_name + \".png\" : null}\r\n          playStatus={playStatus}\r\n          changePlayStatus={handleChangePlayStatus}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Music;","import React, { useState, useEffect } from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport \"./app.css\";\r\n//import Login from \"./pages/login/Login\";\r\nimport Home from \"./pages/home/Home\";\r\nimport List from \"./pages/list/List\";\r\nimport Upload from \"./pages/upload/Upload\";\r\nimport Music from \"./pages/music/Music\";\r\n\r\nconst App = () => {\r\n  const [musicStorage, setMusicStorage] = useState(window.localStorage.getItem(\"music_id\"));\r\n\r\n  useEffect(() => {\r\n    setMusicStorage(window.localStorage.getItem(\"music_id\"));\r\n  }, []);\r\n  const handleChangeMusic = (music_id) => {\r\n    window.localStorage.setItem(\"music_id\", music_id);\r\n    setMusicStorage(music_id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HashRouter>\r\n        <Route exact path=\"/\" render={() => (<Home changeMusic={handleChangeMusic}/>)} />\r\n        <Route path=\"/home\" render={() => (<Home changeMusic={handleChangeMusic}/>)} />\r\n        <Route path=\"/list\" render={() => (<List changeMusic={handleChangeMusic}/>)} />\r\n        <Route path=\"/upload\" render={()=> (<Upload changeMusic={handleChangeMusic}/>)} />\r\n      </HashRouter>\r\n      <Music musicStorage={musicStorage}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./app\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}